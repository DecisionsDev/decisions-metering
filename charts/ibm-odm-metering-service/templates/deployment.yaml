apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{ include "odm-additional-labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      run: {{ template "name" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ template "name" . }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/name: {{ template "name" . }}
        helm.sh/chart: {{ .Chart.Name }}
        run: {{ template "name" . }}
        app: {{ template "name" . }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      annotations:
        productName: {{ .Chart.Description | quote }}
        productID: "7b1b6b93868c4468abbe83421c00f667"
        productVersion: {{ .Chart.AppVersion }}
        productMetric: "FREE"
    spec:
{{ include "odm-serviceAccountName" . | indent 6 }}
{{ include "odm-spec-security-context" . | indent 6 }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          #If you specify multiple nodeSelectorTerms associated with nodeAffinity types,
          #then the pod can be scheduled onto a node if one of the nodeSelectorTerms is satisfied.
          #
          #If you specify multiple matchExpressions associated with nodeSelectorTerms,
          #then the pod can be scheduled onto a node only if all matchExpressions can be satisfied.
          #
          #valid operators: In, NotIn, Exists, DoesNotExist, Gt, Lt
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - {{ .Values.image.arch }}
      volumes:
      {{- if .Values.persistence.enabled }}
      - name: {{ template "fullname" . }}-volume
        persistentVolumeClaim:
          claimName: {{ template "odm.persistenceclaim.fullname" . }}
      {{- end }}
      - name: {{ template "odm-jvm-options-volume.fullname" . }}
        configMap:
          name: {{ template "odm.jvm-options-configmap.fullname" . }}
          items:
           - key: jvm-options
             path: jvm.options
      containers:
        - name: {{ .Chart.Name }}
{{ include "image.tagOrDigest" (dict "containerName" "metering-service" "root" .) | indent 10  }}
{{ include "odm-security-context" . | indent 10 }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: LICENSE
            value: "{{ .Values.license }}"
          - name: LOGGING_LEVEL
            value: "{{ .Values.customization.loggingLevel }}"
          - name: PROCESSING_RATE
            value: "{{ .Values.customization.processingRate }}"
          - name: PROCESSING_INITIAL_DELAY
            value: "{{ .Values.customization.processingInitialDelay }}"
          ports:
          - containerPort: 8888
          volumeMounts:
          {{- if  .Values.persistence.enabled  }}
          - name: {{ template "fullname" . }}-volume
            mountPath: /config/dbdata/
          {{- end }}
          - name: {{ template "odm-jvm-options-volume.fullname" . }}
            mountPath: {{ template "odm-jvm-options-dir" . }}
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 8888
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 8888
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
      {{- if (not (empty .Values.image.pullSecrets )) }}
      imagePullSecrets:
      - name: {{ .Values.image.pullSecrets }}
      {{- end }}