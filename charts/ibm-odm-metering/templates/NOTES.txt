{{- if ne .Values.license "accept" -}}
{{ .Files.Get "LICENSES/LICENSE-LI" }}
--------------------------------------------------------------------------------
Please read and accept the license agreement.

To accept the license:

  - Delete the release {{ .Release.Name }}
    helm del {{ .Release.Name }}

  - Launch the installation with the license parameter set to 'accept'
    helm install {{ .Release.Name }} --set license=accept metering-service

{{- else -}}
{{ .Release.Name }} is ready to be used. {{ .Release.Name }} is an instance of the {{ .Chart.Name }} chart.

{{ .Release.Name }} uses version {{ .Values.image.tag }} of the IBMÂ® Operational Decision Manager (ODM) components with this metering service instance.

Get the application URLs by running the following command:

{{- if or (.Values.service.enableRoute) (.Capabilities.APIVersions.Has "route.openshift.io/v1/Route") }}

In a shell window, copy and paste the following two lines:


export ROUTE=$(oc get routes {{ .Release.Name }}-route -o jsonpath='{.spec.host}')

echo https://$ROUTE


You can also retrieve the route URL in the OpenShift console.
- Open the OpenShift console
- Open the routes menu and search for {{ .Release.Name }}-route.

{{- else -}}
In the shell window, copy and paste the following two lines:
export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "fullname" . }})
export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")

echo https://$NODE_IP:$NODE_PORT/


{{- end }}

You can now specify this URL as the value for the ODM Helm chart parameter `customization.meteringServerUrl`

To learn more about the {{ .Release.Name }} release, try:

  $ helm status {{ .Release.Name }}
  $ helm get {{ .Release.Name }}


{{- if .Values.persistence.useDynamicProvisioning }}

Your PersistenceVolumeClaim is configured with Dynamic Provisioning.
{{- else }}

Your PersistenceVolumeClaim is not created dynamically.
Create a Persistence Volume in your cluster, or use the `persistence.useDynamicProvisioning=true` charts parameter.
{{- end }}
{{- end }}
